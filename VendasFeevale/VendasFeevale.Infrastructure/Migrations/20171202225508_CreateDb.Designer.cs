// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;
using VendasFeevale.Infrastructure;
using VendasFeevale.Infrastructure.Entities.Enums;

namespace VendasFeevale.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20171202225508_CreateDb")]
    partial class CreateDb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("VendasFeevale.Infrastructure.Entity.CabecalhoVenda", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Data");

                    b.Property<DateTime>("DataAceite");

                    b.Property<DateTime>("DataExpedicao");

                    b.Property<string>("Hora");

                    b.Property<string>("IdCliente");

                    b.Property<string>("IdClienteNavigationId");

                    b.Property<int>("Situacao");

                    b.HasKey("Id");

                    b.HasIndex("IdClienteNavigationId");

                    b.ToTable("CabVenda");
                });

            modelBuilder.Entity("VendasFeevale.Infrastructure.Entity.Categoria", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Nome");

                    b.HasKey("Id");

                    b.ToTable("Categoria");
                });

            modelBuilder.Entity("VendasFeevale.Infrastructure.Entity.DetalheVenda", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("IdCab");

                    b.Property<string>("IdCabNavigationId");

                    b.Property<string>("IdPreco");

                    b.Property<string>("IdPrecoNavigationId");

                    b.Property<string>("IdProduto");

                    b.Property<string>("IdProdutoNavigationId");

                    b.HasKey("Id");

                    b.HasIndex("IdCabNavigationId");

                    b.HasIndex("IdPrecoNavigationId");

                    b.HasIndex("IdProdutoNavigationId");

                    b.ToTable("DetVenda");
                });

            modelBuilder.Entity("VendasFeevale.Infrastructure.Entity.Preco", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Data");

                    b.Property<DateTime?>("DataValidade");

                    b.Property<string>("IdProduto");

                    b.Property<string>("IdProdutoNavigationId");

                    b.Property<double>("Valor");

                    b.HasKey("Id");

                    b.HasIndex("IdProdutoNavigationId");

                    b.ToTable("Preco");
                });

            modelBuilder.Entity("VendasFeevale.Infrastructure.Entity.Produto", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("IdCategoria");

                    b.Property<string>("IdCategoriaNavigationId");

                    b.Property<string>("Nome");

                    b.HasKey("Id");

                    b.HasIndex("IdCategoriaNavigationId");

                    b.ToTable("Produtos");
                });

            modelBuilder.Entity("VendasFeevale.Infrastructure.Entity.Usuario", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email");

                    b.Property<string>("Login");

                    b.Property<string>("Nome");

                    b.Property<string>("Senha");

                    b.Property<int>("Tipo");

                    b.HasKey("Id");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("VendasFeevale.Infrastructure.Entity.CabecalhoVenda", b =>
                {
                    b.HasOne("VendasFeevale.Infrastructure.Entity.Usuario", "IdClienteNavigation")
                        .WithMany("CabVenda")
                        .HasForeignKey("IdClienteNavigationId");
                });

            modelBuilder.Entity("VendasFeevale.Infrastructure.Entity.DetalheVenda", b =>
                {
                    b.HasOne("VendasFeevale.Infrastructure.Entity.CabecalhoVenda", "IdCabNavigation")
                        .WithMany("DetVenda")
                        .HasForeignKey("IdCabNavigationId");

                    b.HasOne("VendasFeevale.Infrastructure.Entity.Preco", "IdPrecoNavigation")
                        .WithMany("DetVenda")
                        .HasForeignKey("IdPrecoNavigationId");

                    b.HasOne("VendasFeevale.Infrastructure.Entity.Produto", "IdProdutoNavigation")
                        .WithMany("DetVenda")
                        .HasForeignKey("IdProdutoNavigationId");
                });

            modelBuilder.Entity("VendasFeevale.Infrastructure.Entity.Preco", b =>
                {
                    b.HasOne("VendasFeevale.Infrastructure.Entity.Produto", "IdProdutoNavigation")
                        .WithMany("Preco")
                        .HasForeignKey("IdProdutoNavigationId");
                });

            modelBuilder.Entity("VendasFeevale.Infrastructure.Entity.Produto", b =>
                {
                    b.HasOne("VendasFeevale.Infrastructure.Entity.Categoria", "IdCategoriaNavigation")
                        .WithMany("Produtos")
                        .HasForeignKey("IdCategoriaNavigationId");
                });
#pragma warning restore 612, 618
        }
    }
}
