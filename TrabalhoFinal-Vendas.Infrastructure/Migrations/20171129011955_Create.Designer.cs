// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;
using TrabalhoFinal_Vendas.Infrastructure;
using TrabalhoFinal_Vendas.Infrastructure.Entities.Enums;

namespace TrabalhoFinalVendas.Infrastructure.Migrations
{
    [DbContext(typeof(TrabalhoFinal_Vendas.Infrastructure.AppContext))]
    [Migration("20171129011955_Create")]
    partial class Create
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TrabalhoFinal_Vendas.Infrastructure.Entity.CabecalhoVenda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<DateTime>("Data")
                        .HasColumnName("data")
                        .HasColumnType("date");

                    b.Property<DateTime>("DataAceite")
                        .HasColumnName("dataAceite")
                        .HasColumnType("date");

                    b.Property<DateTime>("DataExpedicao")
                        .HasColumnName("dataExpedicao")
                        .HasColumnType("date");

                    b.Property<string>("Hora")
                        .IsRequired()
                        .HasColumnName("hora")
                        .HasColumnType("nchar(6)");

                    b.Property<int>("IdCliente")
                        .HasColumnName("idCliente");

                    b.Property<int>("Situacao")
                        .HasColumnName("situacao")
                        .HasColumnType("nchar(1)");

                    b.HasKey("Id");

                    b.HasIndex("IdCliente");

                    b.ToTable("Cab_Venda");
                });

            modelBuilder.Entity("TrabalhoFinal_Vendas.Infrastructure.Entity.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnName("nome")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("Categoria");
                });

            modelBuilder.Entity("TrabalhoFinal_Vendas.Infrastructure.Entity.DetalheVenda", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnName("id");

                    b.Property<int>("IdCab")
                        .HasColumnName("idCab");

                    b.Property<int>("IdPreco")
                        .HasColumnName("idPreco");

                    b.Property<int>("IdProduto")
                        .HasColumnName("idProduto");

                    b.HasKey("Id");

                    b.HasIndex("IdCab");

                    b.HasIndex("IdPreco");

                    b.HasIndex("IdProduto");

                    b.ToTable("Det_Venda");
                });

            modelBuilder.Entity("TrabalhoFinal_Vendas.Infrastructure.Entity.Preco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<DateTime>("Data")
                        .HasColumnName("data")
                        .HasColumnType("date");

                    b.Property<DateTime?>("DataValidade")
                        .HasColumnName("dataValidade")
                        .HasColumnType("date");

                    b.Property<int>("IdProduto")
                        .HasColumnName("idProduto");

                    b.Property<double>("Valor")
                        .HasColumnName("valor");

                    b.HasKey("Id");

                    b.HasIndex("IdProduto");

                    b.ToTable("Preco");
                });

            modelBuilder.Entity("TrabalhoFinal_Vendas.Infrastructure.Entity.Produto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<int>("IdCategoria")
                        .HasColumnName("idCategoria");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnName("nome")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("IdCategoria");

                    b.ToTable("Produtos");
                });

            modelBuilder.Entity("TrabalhoFinal_Vendas.Infrastructure.Entity.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnName("email")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnName("login")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnName("nome")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnName("senha")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<int>("Tipo")
                        .HasColumnName("tipo")
                        .HasColumnType("nchar(10)");

                    b.HasKey("Id");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("TrabalhoFinal_Vendas.Infrastructure.Entity.CabecalhoVenda", b =>
                {
                    b.HasOne("TrabalhoFinal_Vendas.Infrastructure.Entity.Usuario", "IdClienteNavigation")
                        .WithMany("CabVenda")
                        .HasForeignKey("IdCliente")
                        .HasConstraintName("FK_Cab_Venda_Usuario");
                });

            modelBuilder.Entity("TrabalhoFinal_Vendas.Infrastructure.Entity.DetalheVenda", b =>
                {
                    b.HasOne("TrabalhoFinal_Vendas.Infrastructure.Entity.CabecalhoVenda", "IdCabNavigation")
                        .WithMany("DetVenda")
                        .HasForeignKey("IdCab")
                        .HasConstraintName("FK_Det_Venda_Cab_Venda");

                    b.HasOne("TrabalhoFinal_Vendas.Infrastructure.Entity.Preco", "IdPrecoNavigation")
                        .WithMany("DetVenda")
                        .HasForeignKey("IdPreco")
                        .HasConstraintName("FK_Det_Venda_Preco");

                    b.HasOne("TrabalhoFinal_Vendas.Infrastructure.Entity.Produto", "IdProdutoNavigation")
                        .WithMany("DetVenda")
                        .HasForeignKey("IdProduto")
                        .HasConstraintName("FK_Det_Venda_Produtos");
                });

            modelBuilder.Entity("TrabalhoFinal_Vendas.Infrastructure.Entity.Preco", b =>
                {
                    b.HasOne("TrabalhoFinal_Vendas.Infrastructure.Entity.Produto", "IdProdutoNavigation")
                        .WithMany("Preco")
                        .HasForeignKey("IdProduto")
                        .HasConstraintName("FK_Preco_Produtos");
                });

            modelBuilder.Entity("TrabalhoFinal_Vendas.Infrastructure.Entity.Produto", b =>
                {
                    b.HasOne("TrabalhoFinal_Vendas.Infrastructure.Entity.Categoria", "IdCategoriaNavigation")
                        .WithMany("Produtos")
                        .HasForeignKey("IdCategoria")
                        .HasConstraintName("FK_Produtos_Categoria");
                });
#pragma warning restore 612, 618
        }
    }
}
